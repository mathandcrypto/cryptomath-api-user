datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
    id  Int @default(autoincrement()) @id
    email String    @unique
    password String
    displayName String
    avatar Avatar?
    profile Profile?
    confirmations Confirmation[]
    reviews Review[]
    reviewers Reviewer[]
    role Role @default(USER)
    reputation Int  @default(0)
    createdAt   DateTime @default(now())
}

enum Role {
    USER
    MODERATOR
    ADMIN
}

model Avatar {
    id  Int @default(autoincrement()) @id
    key String @unique
    url String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
}

model Profile {
    id  Int @default(autoincrement()) @id
    bio String
    url String
    location String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
}

enum ConfirmationType {
    REGISTER
    EMAIL
}

model Confirmation {
    id  Int @default(autoincrement()) @id
    type    ConfirmationType
    code    String
    confirmed   Boolean   @default(false)
    createdAt   DateTime @default(now())
    expiresAt   DateTime
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
}

enum ReviewGrade {
    EXCELLENT
    POSITIVE
    NEGATIVE
    HORRIBLE
}

model Review {
    id  Int @default(autoincrement()) @id
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    grade ReviewGrade
    reviewer    Reviewer?
    comment String
    anonymous   Boolean @default(false)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())
}

model Reviewer {
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    review  Review @relation(fields: [reviewId], references: [id])
    reviewId    Int @id
}